[runs]
## options related to the run to be analyzed and control runs to be
## compared against

# mainRunName is a name that identifies the simulation being analyzed.
mainRunName = 20180129.DECKv1b_piControl.ne30_oEC.edison

# config file for a control run to which this run will be compared.  The
# analysis should have already been run to completion once with this config
# file, so that the relevant MPAS climatologies already exist and have been
# remapped to the comparison grid.  Leave this option commented out if no
# control run is desired.
# controlRunConfigFile = /path/to/config/file

# config file for a main run on which the analysis was already run to
# completion.  The relevant MPAS climatologies already exist and have been
# remapped to the comparison grid and time series have been extracted.
# Leave this option commented out if the analysis for the main run should be
# performed.
# mainRunConfigFile = /path/to/config/file

[execute]
## options related to executing parallel tasks

# the number of parallel tasks (1 means tasks run in serial, the default)
parallelTaskCount = 4

# the parallelism mode in ncclimo ("serial" or "bck")
# Set this to "bck" (background parallelism) if running on a machine that can
# handle 12 simultaneous processes, one for each monthly climatology.
ncclimoParallelMode = bck

[diagnostics]
## config options related to observations, mapping files and region files used
## by MPAS-Analysis in diagnostics computations.

# The base path to the diagnostics directory.  Typically, this will be a shared
# directory on each E3SM supported machine (see the example config files for
# its location).  For other machines, this would be the directory pointed to
# when running "download_analysis_data.py" to get the public observations,
# mapping files and region files.
baseDirectory = /global/project/projectdirs/acme/diagnostics

[input]
## options related to reading in the results to be analyzed

# directory containing model results
baseDirectory = /global/cscratch1/sd/mpeterse/acme_scratch/20180209.GMPAS-IAF.T62_oRRS30to10v3wLI.cori-knl.afterSalinityFix

# subdirectory containing restart files
runSubdirectory = run
# subdirectory for ocean history files
oceanHistorySubdirectory = run
# subdirectory for sea ice history files
seaIceHistorySubdirectory = run

# names of ocean and sea ice meshes (e.g. oEC60to30v3, oQU240v3, oRRS30to10v3, etc.)
mpasMeshName = oRRS30to10v3wLI

# names of namelist and streams files, either a path relative to baseDirectory
# or an absolute path.
oceanNamelistFileName = run/mpas-o_in
oceanStreamsFileName = run/streams.ocean
seaIceNamelistFileName = run/mpas-cice_in
seaIceStreamsFileName = run/streams.cice

[output]
## options related to writing out plots, intermediate cached data sets, logs,
## etc.

# directory where analysis should be written
baseDirectory = /dir/to/analysis/output

# provide an absolute path to put HTML in an alternative location (e.g. a web
# portal)
# htmlSubdirectory = /global/project/projectdirs/acme/www/USERNAME/RUNNAME
htmlSubdirectory = html

# a list of analyses to generate.  Valid names can be seen by running:
#   mpas_analysis --list
# This command also lists tags for each analysis.
# Shortcuts exist to generate (or not generate) several types of analysis.
# These include:
#   'all' -- all analyses will be run
#   'all_<tag>' -- all analysis with a particular tag will be run
#   'all_<component>' -- all analyses from a given component (either 'ocean'
#                        or 'seaIce') will be run
#   'only_<component>', 'only_<tag>' -- all analysis from this component or
#                                       with this tag will be run, and all
#                                       analysis for other components or
#                                       without the tag will be skipped
#   'no_<task_name>' -- skip the given task
#   'no_<component>', 'no_<tag>' -- in analogy to 'all_*', skip all analysis
#                                   tasks from the given compoonent or with
#                                   the given tag.  Do
#                                      mpas_analysis --list
#                                   to list all task names and their tags
# an equivalent syntax can be used on the command line to override this
# option:
#    mpas_analysis config.analysis --generate \
#         all,no_ocean,all_timeSeries
# All tasks with tag "landIceCavities" are disabled because this run did not
# include land-ice cavities.
generate = ['all', 'no_eke', 'no_BGC', 'no_icebergs', 'no_min', 'no_max']

[climatology]
## options related to producing climatologies, typically to compare against
## observations and previous runs

# the first year over which to average climatalogies
startYear = 5
# the last year over which to average climatalogies
endYear = 10

[timeSeries]
## options related to producing time series plots, often to compare against
## observations and previous runs

# start and end years for timeseries analysis. Using out-of-bounds values
#   like start_year = 1 and end_year = 9999 will be clipped to the valid range
#   of years, and is a good way of insuring that all values are used.
startYear = 1
endYear = 10

[index]
## options related to producing nino index.

# start and end years for the nino 3.4 analysis.  Using out-of-bounds values
#   like start_year = 1 and end_year = 9999 will be clipped to the valid range
#   of years, and is a good way of insuring that all values are used.
# For valid statistics, index times should include at least 30 years
startYear = 1
endYear = 10

[climatologyMapWoa]
## options related to plotting climatology maps of Temperature and Salinity
## fields at various levels, including the sea floor against control model
## results and WOA climatological data

# list of depths in meters (positive up) at which to analyze, 'top' for the
# sea surface. Note that, for seasons='ANN', depths can be as deep as 5500 m,
# otherwise use a maximum depth of 1500 m.
depths = ['top', -50, -200, -400, -600, -800]

[climatologyMapWoaTemperature]
## options related to plotting climatology maps of potential temperature
## at various levels, including the sea floor against control model results
## and WOA18 climatological data

# A dictionary with keywords for the norm
normArgsResult = {'vmin': -2., 'vmax': 2.}

[climatologyMapWoaSalinity]
## options related to plotting climatology maps of salinity
## at various levels, including the sea floor against control model results
## and WOA18 climatological data

# A dictionary with keywords for the norm
normArgsResult = {'vmin': 33.8, 'vmax': 35.0}

[TSDiagramsForAntarcticRegions]
## options related to plotting T/S diagrams of Antarctic regions

# The minimum and maximum depth over which fields are plotted, default is
# to take these values from the geojson feature's zmin and zmax properties.
zmin = -1000
zmax = 0
